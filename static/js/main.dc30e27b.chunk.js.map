{"version":3,"sources":["components/Question/styles.module.scss","components/Button/styles.module.scss","components/Wrapper/styles.module.scss","components/AppHeader/index.js","components/Button/index.js","components/Question/index.js","components/Result/index.js","components/Wrapper/index.js","index.js"],"names":["module","exports","AppHeader","className","onClick","children","disabled","cn","styles","btn","Question","state","userAnswers","handleSubmit","props","correctAnswers","questionId","submitAnswer","userAnswersArr","Object","entries","reduce","acc","k","concat","length","every","answer","includes","handleCheck","event","isMultipleChoice","setState","target","value","checked","this","questionsCount","questionIndex","questionText","answers","isNextEnabled","keys","map","check","option","key","check__input","type","onChange","check__radio","name","check__check_box","counter","Button","React","Component","Result","reset","correctAnswersCount","wrapper","questions","question_1","question","correct_answers","question_2","question_3","question_4","question_5","App","currentQuestionIndex","isAnswerCorrect","questionsArr","values","filter","Wrapper","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc30e27b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"answers-action\":\"styles_answers-action__26moB\",\"option\":\"styles_option__26v0i\",\"check\":\"styles_check__jbKTF\",\"check__input\":\"styles_check__input__2ujxI\",\"counter\":\"styles_counter__HNSXB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"styles_btn__2AzBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__3SpfV\"};","import React from \"react\";\n\nconst AppHeader = () => {\n  return <h1>Наскільки ти кіберспортивний експерт</h1>;\n};\n\nexport default AppHeader;\n","import React from \"react\";\nimport cn from \"classnames\";\nimport styles from \"./styles.module.scss\";\n\nexport default ({ className, onClick, children, disabled }) => (\n  <button\n    className={cn(styles.btn, className)}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {children}\n  </button>\n);\n","import React from \"react\";\nimport cn from \"classnames\";\nimport Button from \"../Button\";\nimport styles from \"./styles.module.scss\";\n\nexport default class Question extends React.Component {\n  state = {\n    userAnswers: {},\n  };\n  handleSubmit = () => {\n    const { correctAnswers, questionId, submitAnswer } = this.props;\n    const { userAnswers } = this.state;\n    const userAnswersArr = Object.entries(userAnswers).reduce(\n      (acc, [k, v]) => (v ? acc.concat(k) : acc),\n      []\n    );\n    const isAnswerCorrect =\n      userAnswersArr.length === correctAnswers.length &&\n      userAnswersArr.every((answer) => correctAnswers.includes(answer));\n    submitAnswer(questionId, isAnswerCorrect);\n  };\n  handleCheck = (event) => {\n    if (this.props.isMultipleChoice) {\n      this.setState({\n        userAnswers: {\n          ...this.state.userAnswers,\n          [event.target.value]: event.target.checked,\n        },\n      });\n    } else {\n      this.setState({\n        userAnswers: {\n          [event.target.value]: true,\n        },\n      });\n    }\n  };\n  render() {\n    const {\n      questionsCount,\n      questionIndex,\n      questionText,\n      answers,\n      isMultipleChoice,\n    } = this.props;\n    const isNextEnabled = Object.keys(this.state.userAnswers).length > 0;\n    return (\n      <>\n        <h3>Запитання №{questionIndex + 1}</h3>\n        <h4>{questionText}</h4>\n        <div className={styles[\"answers-row\"]}>\n          {answers.map((answer) => (\n            <label className={cn(styles.check, styles.option)} key={answer}>\n              {isMultipleChoice ? (\n                <>\n                  <input\n                    className={styles.check__input}\n                    type=\"checkbox\"\n                    value={answer}\n                    onChange={this.handleCheck}\n                    checked={!!this.state.userAnswers[answer]}\n                  />\n                  <span className={styles.check__radio} />\n                </>\n              ) : (\n                <>\n                  <input\n                    className={styles.check__input}\n                    type=\"radio\"\n                    name=\"radio\"\n                    value={answer}\n                    onChange={this.handleCheck}\n                  />\n                  <span className={styles.check__check_box} />\n                </>\n              )}\n              {answer}\n            </label>\n          ))}\n          <div className={styles[\"answers-action\"]}>\n            <span className={styles.counter}>\n              {questionIndex + 1}/{questionsCount}\n            </span>\n            <Button onClick={this.handleSubmit} disabled={!isNextEnabled}>\n              Продовжити\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport Button from \"../Button\";\n\nconst Result = ({ reset, correctAnswersCount, questionsCount }) => {\n  return (\n    <>\n      <h2>{`${correctAnswersCount}/${questionsCount}`}</h2>\n      <Button onClick={reset}>Повторити</Button>\n    </>\n  );\n};\n\nexport default Result;\n","import React from \"react\";\nimport styles from \"./styles.module.scss\";\n\nexport default ({ children }) => (\n  <div className={styles.wrapper}>{children}</div>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"normalize.css\";\nimport \"./index.scss\";\n\nimport AppHeader from \"./components/AppHeader\";\nimport Question from \"./components/Question\";\nimport Result from \"./components/Result\";\nimport Wrapper from \"./components/Wrapper\";\n\nconst questions = {\n  question_1: {\n    question:\n      \"Як називається найбільш популярна снайперська гвинтівка у грі CS:GO?\",\n    answers: [\"Fnatic\", \"Na`Vi\", \"Team Secret\", \"OG\"],\n    correct_answers: [\"OG\"],\n  },\n  question_2: {\n    question:\n      \"Хто виграв головний турнір року по Dota 2 - The International 2019?\",\n    answers: [\"Fnatic\", \"Na`Vi\", \"Team Secret\", \"OG\"],\n    correct_answers: [\"OG\"],\n  },\n  question_3: {\n    question: \"Скільки карт використовується на офіційних турнірах СS:GO?\",\n    answers: [\"12\", \"24\", \"6\", \"7\"],\n    correct_answers: [\"7\"],\n  },\n  question_4: {\n    question: \"Найпопулярніша укарїнська кіберспортивна команда\",\n    answers: [\"VP\", \"Na`Vi\", \"Astralis\", \"HR\"],\n    correct_answers: [\"Na`Vi\"],\n  },\n  question_5: {\n    question: \"Яка гра є головним конкурентом дисципліни DOTA2\",\n    answers: [\"LOL\", \"WOW\", \"Startcraft\", \"Battlerite\"],\n    correct_answers: [\"LOL\"],\n  },\n};\n\nconst getInitialState = () => ({ currentQuestionIndex: 0, userAnswers: {} });\n\nclass App extends React.Component {\n  state = getInitialState();\n  submitAnswer = (questionId, isAnswerCorrect) => {\n    this.setState({\n      userAnswers: {\n        ...this.state.userAnswers,\n        [questionId]: isAnswerCorrect,\n      },\n      currentQuestionIndex: this.state.currentQuestionIndex + 1,\n    });\n  };\n  reset = () => {\n    this.setState(getInitialState());\n  };\n  render() {\n    const questionsArr = Object.entries(questions).map((question) => {\n      return {\n        questionId: question[0],\n        ...question[1],\n      };\n    });\n    const question = questionsArr[this.state.currentQuestionIndex];\n    const correctAnswersCount = Object.values(this.state.userAnswers).filter(\n      (answer) => answer\n    ).length;\n    const questionsCount = questionsArr.length;\n    return (\n      <Wrapper>\n        <AppHeader />\n        {question ? (\n          <Question\n            key={question.questionId}\n            questionsCount={questionsCount}\n            questionIndex={this.state.currentQuestionIndex}\n            questionId={question.questionId}\n            questionText={question.question}\n            answers={question.answers}\n            correctAnswers={question.correct_answers}\n            submitAnswer={this.submitAnswer}\n            isMultipleChoice={question.correct_answers.length > 1}\n          />\n        ) : (\n          <Result\n            questionsCount={questionsCount}\n            correctAnswersCount={correctAnswersCount}\n            reset={this.reset}\n          />\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}